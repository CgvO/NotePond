# Generated by Django 4.1.7 on 2023-06-03 18:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='Enter a course name', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='Enter a tag name', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the note title', max_length=200)),
                ('share_code', models.PositiveIntegerField(help_text='Enter the share code')),
                ('private_code', models.PositiveIntegerField(help_text='Enter the private code')),
                ('note_file', models.FileField(help_text='Upload the note file', upload_to='notes/')),
                ('note_image', models.ImageField(help_text='Upload the note image', upload_to='notes/images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('week', models.PositiveIntegerField(blank=True, help_text='Enter the week number', null=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('dislikes', models.PositiveIntegerField(default=0)),
                ('course', models.ForeignKey(blank=True, help_text='Select a course for the note', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='common.course')),
                ('tags', models.ManyToManyField(help_text='Select tags for the note', related_name='notes', to='common.tag')),
            ],
        ),
    ]
